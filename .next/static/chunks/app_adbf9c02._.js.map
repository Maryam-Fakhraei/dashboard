{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///home/myam/project-SCDP/learn-next/fullstack-next/app/ui/user-dashboard/LineChart.tsx"],"sourcesContent":["// \"use client\";\n// import { useRef, useEffect } from \"react\";\n// import { Chart } from \"chart.js/auto\";\n\n// export default function LineChart() {\n//   const chartRef = useRef(null);\n\n//   useEffect(() => {\n//     if (chartRef.current) {\n//       if (chartRef.current.chart) {\n//         chartRef.current.chart.destroy();\n//       }\n//       const context = chartRef.current.getContext(\"2d\");\n\n//       const newChart = new Chart(context, {\n//         type: \"line\",\n//         data: {\n//           labels: [0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50],\n//           datasets: [\n//             {\n//               label: \"Info\",\n//               data: [24, 27, 30, 18, 20, 17, 25, 24, 19, 26],\n//               backgroundColor: [\"rgb(75, 192, 192, 0.2)\"],\n//               borderColor: [\"rgb(75, 192, 192)\"],\n//               borderWidth: 2,\n//             },\n//           ],\n//         },\n//         options: {\n//           responsive: true,\n//           scales: {\n//             x: {\n//               type: \"linear\",\n//             },\n//             y: {\n//               beginAtZero: true,\n//             },\n//           },\n//         },\n//       });\n\n//       chartRef.current.chart = newChart;\n//     }\n//   }, []);\n//   return (\n//     <div style={{ position: \"relative\", width: \"90vw\", height: \"80vh\" }}>\n//       <canvas ref={chartRef} />\n//     </div>\n//   );\n// }\n\n\n\n\"use client\";\nimport { useRef, useEffect } from \"react\";\nimport { Chart } from \"chart.js/auto\";\nimport { CHART_COLORS } from \"chart.js\"; // اگر Utils در دسترس نیست\n\nexport default function LineChart() {\n  const chartRef = useRef<HTMLCanvasElement | null>(null);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    const ctx = chartRef.current.getContext(\"2d\");\n    if (!ctx) return;\n\n    // اگر نموداری قبلی بود، نابودش کن\n    if (chartRef.current.chart) {\n      chartRef.current.chart.destroy();\n    }\n\n    let width: number, height: number;\n    let gradient: CanvasGradient;\n\n    function getGradient() {\n      const chart = chartRef.current?.chart;\n      if (!chart) return;\n      const chartArea = (chart as any).chartArea;\n      if (!chartArea) return;\n\n      const chartWidth = chartArea.right - chartArea.left;\n      const chartHeight = chartArea.bottom - chartArea.top;\n\n      if (!gradient || width !== chartWidth || height !== chartHeight) {\n        width = chartWidth;\n        height = chartHeight;\n        gradient = ctx.createLinearGradient(0, chartArea.bottom, 0, chartArea.top);\n        gradient.addColorStop(0, CHART_COLORS.blue);\n        gradient.addColorStop(0.5, CHART_COLORS.yellow);\n        gradient.addColorStop(1, CHART_COLORS.red);\n      }\n      return gradient;\n    }\n\n    const newChart = new Chart(ctx, {\n      type: \"line\",\n      data: {\n        labels: [0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50],\n        datasets: [\n          {\n            label: \"Temperature\",\n            data: [24, 27, 30, 18, 20, 17, 25, 24, 19, 26],\n            fill: true,\n            backgroundColor: \"rgba(255, 99, 132, 0.2)\",\n            borderColor: function (context) {\n              return getGradient() as any;\n            },\n            borderWidth: 3,\n            tension: 0.4,\n            pointRadius: 6,\n            pointHoverRadius: 8,\n          },\n        ],\n      },\n      options: {\n        responsive: true,\n        plugins: {\n          legend: { display: true },\n        },\n        scales: {\n          x: { title: { display: true, text: \"Time\" } },\n          y: { beginAtZero: true, title: { display: true, text: \"Value\" } },\n        },\n      },\n    });\n\n    chartRef.current.chart = newChart;\n  }, []);\n\n  return (\n    <div style={{ position: \"relative\", width: \"90vw\", height: \"80vh\" }}>\n      <canvas ref={chartRef} />\n    </div>\n  );\n}\n"],"names":[],"mappings":"AAAA,gBAAgB;AAChB,6CAA6C;AAC7C,yCAAyC;AAEzC,wCAAwC;AACxC,mCAAmC;AAEnC,sBAAsB;AACtB,8BAA8B;AAC9B,sCAAsC;AACtC,4CAA4C;AAC5C,UAAU;AACV,2DAA2D;AAE3D,8CAA8C;AAC9C,wBAAwB;AACxB,kBAAkB;AAClB,gEAAgE;AAChE,wBAAwB;AACxB,gBAAgB;AAChB,+BAA+B;AAC/B,gEAAgE;AAChE,6DAA6D;AAC7D,oDAAoD;AACpD,gCAAgC;AAChC,iBAAiB;AACjB,eAAe;AACf,aAAa;AACb,qBAAqB;AACrB,8BAA8B;AAC9B,sBAAsB;AACtB,mBAAmB;AACnB,gCAAgC;AAChC,iBAAiB;AACjB,mBAAmB;AACnB,mCAAmC;AACnC,iBAAiB;AACjB,eAAe;AACf,aAAa;AACb,YAAY;AAEZ,2CAA2C;AAC3C,QAAQ;AACR,YAAY;AACZ,aAAa;AACb,4EAA4E;AAC5E,kCAAkC;AAClC,aAAa;AACb,OAAO;AACP,IAAI;;;;;AAKJ;AACA;AAAA;AACA,+WAAyC,0BAA0B;;;AAHnE;;;;AAKe,SAAS;;IACtB,MAAM,WAAW,IAAA,sUAAM,EAA2B;IAElD,IAAA,yUAAS;+BAAC;YACR,IAAI,CAAC,SAAS,OAAO,EAAE;YAEvB,MAAM,MAAM,SAAS,OAAO,CAAC,UAAU,CAAC;YACxC,IAAI,CAAC,KAAK;YAEV,kCAAkC;YAClC,IAAI,SAAS,OAAO,CAAC,KAAK,EAAE;gBAC1B,SAAS,OAAO,CAAC,KAAK,CAAC,OAAO;YAChC;YAEA,IAAI,OAAe;YACnB,IAAI;YAEJ,SAAS;oBACO;gBAAd,MAAM,SAAQ,oBAAA,SAAS,OAAO,cAAhB,wCAAA,kBAAkB,KAAK;gBACrC,IAAI,CAAC,OAAO;gBACZ,MAAM,YAAY,AAAC,MAAc,SAAS;gBAC1C,IAAI,CAAC,WAAW;gBAEhB,MAAM,aAAa,UAAU,KAAK,GAAG,UAAU,IAAI;gBACnD,MAAM,cAAc,UAAU,MAAM,GAAG,UAAU,GAAG;gBAEpD,IAAI,CAAC,YAAY,UAAU,cAAc,WAAW,aAAa;oBAC/D,QAAQ;oBACR,SAAS;oBACT,WAAW,IAAI,oBAAoB,CAAC,GAAG,UAAU,MAAM,EAAE,GAAG,UAAU,GAAG;oBACzE,SAAS,YAAY,CAAC,GAAG,wOAAY,CAAC,IAAI;oBAC1C,SAAS,YAAY,CAAC,KAAK,wOAAY,CAAC,MAAM;oBAC9C,SAAS,YAAY,CAAC,GAAG,wOAAY,CAAC,GAAG;gBAC3C;gBACA,OAAO;YACT;YAEA,MAAM,WAAW,IAAI,gOAAK,CAAC,KAAK;gBAC9B,MAAM;gBACN,MAAM;oBACJ,QAAQ;wBAAC;wBAAG;wBAAG;wBAAI;wBAAI;wBAAI;wBAAI;wBAAI;wBAAI;wBAAI;wBAAI;qBAAG;oBAClD,UAAU;wBACR;4BACE,OAAO;4BACP,MAAM;gCAAC;gCAAI;gCAAI;gCAAI;gCAAI;gCAAI;gCAAI;gCAAI;gCAAI;gCAAI;6BAAG;4BAC9C,MAAM;4BACN,iBAAiB;4BACjB,WAAW;uDAAE,SAAU,OAAO;oCAC5B,OAAO;gCACT;;4BACA,aAAa;4BACb,SAAS;4BACT,aAAa;4BACb,kBAAkB;wBACpB;qBACD;gBACH;gBACA,SAAS;oBACP,YAAY;oBACZ,SAAS;wBACP,QAAQ;4BAAE,SAAS;wBAAK;oBAC1B;oBACA,QAAQ;wBACN,GAAG;4BAAE,OAAO;gCAAE,SAAS;gCAAM,MAAM;4BAAO;wBAAE;wBAC5C,GAAG;4BAAE,aAAa;4BAAM,OAAO;gCAAE,SAAS;gCAAM,MAAM;4BAAQ;wBAAE;oBAClE;gBACF;YACF;YAEA,SAAS,OAAO,CAAC,KAAK,GAAG;QAC3B;8BAAG,EAAE;IAEL,qBACE,4VAAC;QAAI,OAAO;YAAE,UAAU;YAAY,OAAO;YAAQ,QAAQ;QAAO;kBAChE,cAAA,4VAAC;YAAO,KAAK;;;;;;;;;;;AAGnB;GA7EwB;KAAA","debugId":null}},
    {"offset": {"line": 199, "column": 0}, "map": {"version":3,"sources":["file:///home/myam/project-SCDP/learn-next/fullstack-next/app/ui/user-dashboard/BarChart.jsx"],"sourcesContent":["\"use client\";\nimport { useRef, useEffect, useState } from \"react\";\nimport { Chart } from \"chart.js/auto\";\nimport axios from \"axios\";\n\nexport default function BarChartAxios() {\n  const chartRef = useRef(null);\n\n  const [chartData, setChartData] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios(\"https://dummyjson.com/users\");\n      if (response.status != 200) {\n        console.error(\"Bad response\");\n      }\n      const data = await response.data;\n\n      setChartData(data.users);\n    };\n\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    if (chartRef.current) {\n      if (chartRef.current.chart) {\n        chartRef.current.chart.destroy();\n      }\n      const context = chartRef.current.getContext(\"2d\");\n\n      const label = chartData.map((items) => items.firstName);\n      const data = chartData.map((items) => items.weight);\n\n      const newChart = new Chart(context, {\n        type: \"bar\",\n        data: {\n          labels: label,\n          datasets: [\n            {\n              label: \"Info\",\n              data: data,\n\n              backgroundColor: [\n                \"rgb(255, 99, 132, 0.2)\",\n                \"rgb(255, 159, 64, 0.2)\",\n                \"rgb(255, 205, 86, 0.2)\",\n                \"rgb(75, 192, 192, 0.2)\",\n                \"rgb(54, 162, 235, 0.2)\",\n                \"rgb(153, 102, 255, 0.2)\",\n                \"rgb(201, 203, 207, 0.2)\",\n              ],\n              borderColor: [\n                \"rgb(255, 99, 132)\",\n                \"rgb(255, 159, 64)\",\n                \"rgb(255, 205, 86)\",\n                \"rgb(75, 192, 192)\",\n                \"rgb(54, 162, 235)\",\n                \"rgb(153, 102, 255)\",\n                \"rgb(201, 203, 207)\",\n              ],\n              borderWidth: 1,\n              borderRadius: 10,\n            },\n          ],\n        },\n        options: {\n          plugins: {\n            title: {\n              display: true,\n              text: \"Weight Name Info\",\n            },\n          },\n          layout: {\n            padding: 40,\n          },\n          // responsive: true,\n          scales: {\n            x: {\n              type: \"category\",\n            },\n            y: {\n              beginAtZero: true,\n            },\n          },\n        },\n      });\n\n      chartRef.current.chart = newChart;\n    }\n  }, [chartData]);\n  return (\n    <div style={{ position: \"relative\", width: \"90vw\", height: \"80vh\" }}>\n      <canvas ref={chartRef} />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AAAA;AACA;;;AAHA;;;;AAKe,SAAS;;IACtB,MAAM,WAAW,IAAA,sUAAM,EAAC;IAExB,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,wUAAQ,EAAC,EAAE;IAE7C,IAAA,yUAAS;mCAAC;YACR,MAAM;qDAAY;oBAChB,MAAM,WAAW,MAAM,IAAA,sMAAK,EAAC;oBAC7B,IAAI,SAAS,MAAM,IAAI,KAAK;wBAC1B,QAAQ,KAAK,CAAC;oBAChB;oBACA,MAAM,OAAO,MAAM,SAAS,IAAI;oBAEhC,aAAa,KAAK,KAAK;gBACzB;;YAEA;QACF;kCAAG,EAAE;IAEL,IAAA,yUAAS;mCAAC;YACR,IAAI,SAAS,OAAO,EAAE;gBACpB,IAAI,SAAS,OAAO,CAAC,KAAK,EAAE;oBAC1B,SAAS,OAAO,CAAC,KAAK,CAAC,OAAO;gBAChC;gBACA,MAAM,UAAU,SAAS,OAAO,CAAC,UAAU,CAAC;gBAE5C,MAAM,QAAQ,UAAU,GAAG;qDAAC,CAAC,QAAU,MAAM,SAAS;;gBACtD,MAAM,OAAO,UAAU,GAAG;oDAAC,CAAC,QAAU,MAAM,MAAM;;gBAElD,MAAM,WAAW,IAAI,gOAAK,CAAC,SAAS;oBAClC,MAAM;oBACN,MAAM;wBACJ,QAAQ;wBACR,UAAU;4BACR;gCACE,OAAO;gCACP,MAAM;gCAEN,iBAAiB;oCACf;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;iCACD;gCACD,aAAa;oCACX;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;iCACD;gCACD,aAAa;gCACb,cAAc;4BAChB;yBACD;oBACH;oBACA,SAAS;wBACP,SAAS;4BACP,OAAO;gCACL,SAAS;gCACT,MAAM;4BACR;wBACF;wBACA,QAAQ;4BACN,SAAS;wBACX;wBACA,oBAAoB;wBACpB,QAAQ;4BACN,GAAG;gCACD,MAAM;4BACR;4BACA,GAAG;gCACD,aAAa;4BACf;wBACF;oBACF;gBACF;gBAEA,SAAS,OAAO,CAAC,KAAK,GAAG;YAC3B;QACF;kCAAG;QAAC;KAAU;IACd,qBACE,4VAAC;QAAI,OAAO;YAAE,UAAU;YAAY,OAAO;YAAQ,QAAQ;QAAO;kBAChE,cAAA,4VAAC;YAAO,KAAK;;;;;;;;;;;AAGnB;GA3FwB;KAAA","debugId":null}},
    {"offset": {"line": 333, "column": 0}, "map": {"version":3,"sources":["file:///home/myam/project-SCDP/learn-next/fullstack-next/app/user-dashboard/%5Btype%5D/page.tsx"],"sourcesContent":["\"use client\";\nimport { useParams } from \"next/navigation\";\nimport LineChart from \"@/app/ui/user-dashboard/LineChart\";\nimport BarChart from \"@/app/ui/user-dashboard/BarChart\";\n\nexport default function Page() {\n  const params = useParams();\n  const sensorType = params.type;\n\n  return (\n    <div>\n      {sensorType === \"temperature-sensor\" && (\n        <>\n          <h3>Line Chart</h3>\n          <LineChart />\n        </>\n      )}\n\n      {sensorType === \"humidity-sensor\" && (\n        <>\n          <h3>Bar Chart</h3>\n          <BarChart />\n        </>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;;;AAHA;;;;AAKe,SAAS;;IACtB,MAAM,SAAS,IAAA,iSAAS;IACxB,MAAM,aAAa,OAAO,IAAI;IAE9B,qBACE,4VAAC;;YACE,eAAe,sCACd;;kCACE,4VAAC;kCAAG;;;;;;kCACJ,4VAAC,0JAAS;;;;;;;YAIb,eAAe,mCACd;;kCACE,4VAAC;kCAAG;;;;;;kCACJ,4VAAC,yJAAQ;;;;;;;;;;;;;AAKnB;GArBwB;;QACP,iSAAS;;;KADF","debugId":null}}]
}