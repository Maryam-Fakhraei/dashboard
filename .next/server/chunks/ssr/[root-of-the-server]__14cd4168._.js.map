{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["file:///home/myam/project-SCDP/learn-next/fullstack-next/app/ui/user-dashboard/LineChart.jsx"],"sourcesContent":["\"use client\";\nimport { useRef, useEffect, useState } from \"react\";\nimport { Chart } from \"chart.js/auto\";\n\nexport default function LineChart() {\n  const chartRef = useRef(null);\n  const [range, setRange] = useState(\"day\"); // day | week\n  const [filteredData, setFilteredData] = useState([]);\n\n  const data = {\n    day: {\n      labels: [\n        \"00:00\",\n        \"03:00\",\n        \"06:00\",\n        \"09:00\",\n        \"12:00\",\n        \"15:00\",\n        \"18:00\",\n        \"21:00\",\n      ],\n      values: [22, 20, 18, 25, 27, 30, 26, 24],\n    },\n    week: {\n      labels: [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"],\n      values: [25, 27, 26, 28, 29, 30, 24],\n    },\n  };\n\n  useEffect(() => {\n    setFilteredData(data[range]);\n  }, [range]);\n\n  useEffect(() => {\n    if (chartRef.current && filteredData.labels) {\n      if (chartRef.current.chart) {\n        chartRef.current.chart.destroy();\n      }\n\n      const ctx = chartRef.current.getContext(\"2d\");\n\n      const gradient = ctx.createLinearGradient(0, 0, 0, ctx.canvas.height);\n      gradient.addColorStop(0, \"rgba(5, 31, 100, 0.4)\");\n      gradient.addColorStop(1, \"rgba(4, 178, 164, 0)\");\n\n      const newChart = new Chart(ctx, {\n        type: \"line\",\n        data: {\n          labels: filteredData.labels,\n          datasets: [\n            {\n              label: \"Temperature\",\n              data: filteredData.values,\n              borderColor: \"rgb(4, 178, 164)\",\n              backgroundColor: gradient,\n              borderWidth: 2,\n              tension: 0.4,\n              fill: true,\n              pointBackgroundColor: \"rgb(5, 31, 100)\",\n              pointBorderColor: \"rgb(4, 178, 164)\",\n              pointRadius: 5,\n              pointHoverRadius: 7,\n            },\n          ],\n        },\n        options: {\n          responsive: true,\n          plugins: {\n            legend: {\n              labels: {\n                font: { size: 14 },\n              },\n            },\n          },\n          scales: {\n            y: { beginAtZero: true },\n          },\n        },\n      });\n\n      chartRef.current.chart = newChart;\n    }\n  }, [filteredData]);\n\n  return (\n    <div className=\"w-[90vw] h-[80vh]\">\n      <div className=\"mb-4 flex items-center gap-2\">\n        <label className=\"font-medium\">Time Range:</label>\n        <select\n          value={range}\n          onChange={(e) => setRange(e.target.value)}\n          className=\"border rounded px-2 py-1 bg-white shadow-sm focus:outline-none focus:ring-2 focus:ring-emerald-500\"\n        >\n          <option value=\"day\">Today (hours)</option>\n          <option value=\"week\">This Week (days)</option>\n        </select>\n      </div>\n\n      <canvas ref={chartRef} />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AAAA;AAFA;;;;AAIe,SAAS;IACtB,MAAM,WAAW,IAAA,8VAAM,EAAC;IACxB,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,gWAAQ,EAAC,QAAQ,aAAa;IACxD,MAAM,CAAC,cAAc,gBAAgB,GAAG,IAAA,gWAAQ,EAAC,EAAE;IAEnD,MAAM,OAAO;QACX,KAAK;YACH,QAAQ;gBACN;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;aACD;YACD,QAAQ;gBAAC;gBAAI;gBAAI;gBAAI;gBAAI;gBAAI;gBAAI;gBAAI;aAAG;QAC1C;QACA,MAAM;YACJ,QAAQ;gBAAC;gBAAO;gBAAO;gBAAO;gBAAO;gBAAO;gBAAO;aAAM;YACzD,QAAQ;gBAAC;gBAAI;gBAAI;gBAAI;gBAAI;gBAAI;gBAAI;aAAG;QACtC;IACF;IAEA,IAAA,iWAAS,EAAC;QACR,gBAAgB,IAAI,CAAC,MAAM;IAC7B,GAAG;QAAC;KAAM;IAEV,IAAA,iWAAS,EAAC;QACR,IAAI,SAAS,OAAO,IAAI,aAAa,MAAM,EAAE;YAC3C,IAAI,SAAS,OAAO,CAAC,KAAK,EAAE;gBAC1B,SAAS,OAAO,CAAC,KAAK,CAAC,OAAO;YAChC;YAEA,MAAM,MAAM,SAAS,OAAO,CAAC,UAAU,CAAC;YAExC,MAAM,WAAW,IAAI,oBAAoB,CAAC,GAAG,GAAG,GAAG,IAAI,MAAM,CAAC,MAAM;YACpE,SAAS,YAAY,CAAC,GAAG;YACzB,SAAS,YAAY,CAAC,GAAG;YAEzB,MAAM,WAAW,IAAI,6NAAK,CAAC,KAAK;gBAC9B,MAAM;gBACN,MAAM;oBACJ,QAAQ,aAAa,MAAM;oBAC3B,UAAU;wBACR;4BACE,OAAO;4BACP,MAAM,aAAa,MAAM;4BACzB,aAAa;4BACb,iBAAiB;4BACjB,aAAa;4BACb,SAAS;4BACT,MAAM;4BACN,sBAAsB;4BACtB,kBAAkB;4BAClB,aAAa;4BACb,kBAAkB;wBACpB;qBACD;gBACH;gBACA,SAAS;oBACP,YAAY;oBACZ,SAAS;wBACP,QAAQ;4BACN,QAAQ;gCACN,MAAM;oCAAE,MAAM;gCAAG;4BACnB;wBACF;oBACF;oBACA,QAAQ;wBACN,GAAG;4BAAE,aAAa;wBAAK;oBACzB;gBACF;YACF;YAEA,SAAS,OAAO,CAAC,KAAK,GAAG;QAC3B;IACF,GAAG;QAAC;KAAa;IAEjB,qBACE,6XAAC;QAAI,WAAU;;0BACb,6XAAC;gBAAI,WAAU;;kCACb,6XAAC;wBAAM,WAAU;kCAAc;;;;;;kCAC/B,6XAAC;wBACC,OAAO;wBACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;wBACxC,WAAU;;0CAEV,6XAAC;gCAAO,OAAM;0CAAM;;;;;;0CACpB,6XAAC;gCAAO,OAAM;0CAAO;;;;;;;;;;;;;;;;;;0BAIzB,6XAAC;gBAAO,KAAK;;;;;;;;;;;;AAGnB","debugId":null}},
    {"offset": {"line": 218, "column": 0}, "map": {"version":3,"sources":["file:///home/myam/project-SCDP/learn-next/fullstack-next/app/user-dashboard/%5Btype%5D/page.tsx"],"sourcesContent":["\"use client\";\nimport { useParams } from \"next/navigation\";\nimport LineChart from \"@/app/ui/user-dashboard/LineChart\";\n\nexport default function Page() {\n  const params = useParams();\n  const sensorType = params.type;\n\n  return (\n    <div>\n      {sensorType === \"temperature-sensor\" && (\n        <>\n          <LineChart />\n        </>\n      )}\n\n      {sensorType === \"humidity-sensor\" && (\n        <>\n          <LineChart />\n        </>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AAFA;;;;AAIe,SAAS;IACtB,MAAM,SAAS,IAAA,8RAAS;IACxB,MAAM,aAAa,OAAO,IAAI;IAE9B,qBACE,6XAAC;;YACE,eAAe,sCACd;0BACE,cAAA,6XAAC,uJAAS;;;;;;YAIb,eAAe,mCACd;0BACE,cAAA,6XAAC,uJAAS;;;;;;;;;;;;AAKpB","debugId":null}}]
}